Description:
 libutils uses UniquePtr from libnativehelper and bionic, since it is
 equivalant to C++11's std::unique_ptr, we simply use that one.
Author: Kai-Chung Yan <seamlikok@gmail.com>
Last-Update: 2015-11-27
--- a/libutils/CallStack.cpp
+++ b/libutils/CallStack.cpp
@@ -20,7 +20,7 @@
 #include <utils/Printer.h>
 #include <utils/Errors.h>
 #include <utils/Log.h>
-#include <UniquePtr.h>
+#include <memory>
 
 #include <backtrace/Backtrace.h>
 
@@ -40,7 +40,7 @@
 void CallStack::update(int32_t ignoreDepth, pid_t tid) {
     mFrameLines.clear();
 
-    UniquePtr<Backtrace> backtrace(Backtrace::Create(BACKTRACE_CURRENT_PROCESS, tid));
+    std::unique_ptr<Backtrace> backtrace(Backtrace::Create(BACKTRACE_CURRENT_PROCESS, tid));
     if (!backtrace->Unwind(ignoreDepth)) {
         ALOGW("%s: Failed to unwind callstack.", __FUNCTION__);
     }
